name: CI & Release

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: volta-cli/action@v4

      - name: Install pinned toolchain
        run: |
          NODE_VERSION=$(jq -r '.volta.node' package.json)
          PNPM_VERSION=$(jq -r '.volta.pnpm' package.json)
          volta install node@"$NODE_VERSION"
          volta install pnpm@"$PNPM_VERSION"

      - name: Show tool versions
        run: |
          volta --version
          node --version
          pnpm --version

      - name: Determine pnpm store path
        id: pnpm-store
        run: echo "store=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.store }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format:check

      - name: Security audit
        run: pnpm audit --audit-level=moderate
        continue-on-error: true

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: volta-cli/action@v4

      - name: Install pinned toolchain
        run: |
          NODE_VERSION=$(jq -r '.volta.node' package.json)
          PNPM_VERSION=$(jq -r '.volta.pnpm' package.json)
          volta install node@"$NODE_VERSION"
          volta install pnpm@"$PNPM_VERSION"

      - name: Determine pnpm store path
        id: pnpm-store
        run: echo "store=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.store }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm -r test

  build:
    name: Build
    needs: [lint-and-format, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: volta-cli/action@v4

      - name: Install pinned toolchain
        run: |
          NODE_VERSION=$(jq -r '.volta.node' package.json)
          PNPM_VERSION=$(jq -r '.volta.pnpm' package.json)
          volta install node@"$NODE_VERSION"
          volta install pnpm@"$PNPM_VERSION"

      - name: Determine pnpm store path
        id: pnpm-store
        run: echo "store=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.store }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm -r build

  publish:
    name: Version PR or Publish
    needs: [build]
    runs-on: ubuntu-latest
    # Only publish on main, not on PRs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      pull-requests: write
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: volta-cli/action@v4

      - name: Install pinned toolchain
        run: |
          NODE_VERSION=$(jq -r '.volta.node' package.json)
          PNPM_VERSION=$(jq -r '.volta.pnpm' package.json)
          volta install node@"$NODE_VERSION"
          volta install pnpm@"$PNPM_VERSION"

      - name: Determine pnpm store path
        id: pnpm-store
        run: echo "store=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.store }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm -r build

      - name: Configure npmjs auth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Changesets (Version PR and Publish)
        uses: changesets/action@v1
        with:
          version: pnpm version:packages
          commit: |
            chore: version oss packages
          title: |
            chore: version oss packages
          publish: pnpm release
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
